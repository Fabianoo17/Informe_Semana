@model Core.ViewModels.Exemplo.ExemploEntity

@Html.Partial("_IncludeJSFormValidation")

<form id="form-default" action="@Url.Action("Create")" method="post" onsubmit="return false;">

    @Html.AntiForgeryToken()

    <div class="modal fade in" id="myModal" role="dialog" data-backdrop="static">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title">Criar</h4>
                </div>
                <div class="modal-body">

                    <div class="form-horizontal">
 
                        <div id="validation-message">
                            @Html.Partial("_ErrorSummary")
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.NOME, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.NOME, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.NOME, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DESCRICAO, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.TextAreaFor(model => model.DESCRICAO, new { @class = "form-control", rows = 5 })
                                @Html.ValidationMessageFor(model => model.DESCRICAO, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ATIVO, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                <div class="checkbox-inline">
                                    @Html.CheckBoxFor(model => model.ATIVO, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ATIVO, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <button id="btn-save" type="button" class="btn btn-success"><i class="fa fa-save"></i> Salvar</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Fechar</button>
                </div>

            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->
</form>

<script>
    jQuery(function ($) {

        // Global
        var form = $('#form-default');
        var thisForm = form[0];
        var btnSave = $('#btn-save');
        var validationMessage = $('#validation-message');
        var myModal = $('#myModal');

        myModal.modal('show');

        btnSave.click(function () {

            validationMessage.html('');

            if (form.valid()) {

                btnSave.attr('disabled', 'disabled');

                $.ajax({
                    dataType: 'json',
                    url: thisForm.action,
                    type: thisForm.method,
                    data: form.serialize(),
                    beforeSend: function () {
                        blockUI('Processando...');
                    }
                }).done(function (data) {

                    unblockUI();

                    if (data.Success) {
                        myModal.modal('hide');

                        toastr.options = {
                            "positionClass": "toast-bottom-right"
                        }
                        toastr["success"](data.Messages[0]);
                    } else {
                        btnSave.removeAttr('disabled');
                        validationMessage.html(errorSummary(data.Messages));
                    }

                }).fail(function (error) {
                    btnSave.removeAttr('disabled');
                    unblockUI();
                    validationMessage.html(alertError('Ocorreu um erro na requisição. Tente novamente ou contate o administrador.'));
                    console.error(error);
                });
            }
        });

    });

</script>